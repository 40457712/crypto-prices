{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\billy\\\\React\\\\crypto-prices\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport CryptoList from './components/CryptoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log(\"App Starting\");\n  const livedata = [{\n    time: 1694329200,\n    volume: 773213.97\n  }];\n  const [crypto, setCrypto] = useState(false);\n  const [CryptoVol, setCryptoVol] = useState([]);\n  const [CryptoTime, setCryptoTime] = useState([]);\n  const [CryptoData, setCryptoData] = useState([]);\n  let cryptoTemp = [];\n  let cryptoVolume = [];\n  let cryptoData = [];\n  function serialDateToNiceDate(date) {\n    date = (date / 3600 / 24).toString();\n    return new Date(Math.round(date * 86400 * 1000)).toUTCString();\n  }\n\n  //function myFunction(item) {\n  //  console.log(\"My Function running\")\n  //  console.log(item);\n  //  const [time, volume] = item;\n  //  console.log(time);\n  //}\n\n  //function processData(item, index){\n  //console.log(\"Process running\")\n  //cryptoTemp = [];\n  //item.map((item, index) => (\n  //  console.log(\"Index Array :-\" + index + item.time + item.volume)\n  //  ))\n\n  //cryptoTemp.push(serialDateToNiceDate(item.time));\n  //cryptoTemp.push(item.volume);\n  //cryptoVolume.push(item.volume);\n  // console.log(\"Temp Array :-\" + cryptoTemp);\n  //cryptoData.push(cryptoTemp);\n  //console.log(\"Data Array :-\" + cryptoData);\n  //}\n\n  function obtainData() {\n    let response = null;\n    new Promise(async (resolve, reject) => {\n      try {\n        response = await axios.get(\"https://min-api.cryptocompare.com/data/exchange/histohour?tsym=BCH&limit=30&api_key=518c2b6d6f2d6282006b26e532bfc1e2b9f5d5184731e3ef885a785d473d6fde\");\n      } catch (ex) {\n        response = null;\n        // error\n        console.log(ex);\n        reject(ex);\n      }\n      if (response) {\n        // success\n        console.log(\"Sucess\");\n        //setCryptoData(livedata);\n        //cryptoTemp = [];\n        //const data = response.data;\n        //console.log(typeof (data.Data));\n        //console.log(data.Data);\n\n        //const transformeddata = data.Data.map((cryptoData) => {\n        //  return {\n        //    time: cryptoData.time\n        //  };\n        //})\n\n        //  setCryptoData(transformeddata);\n        //console.log(typeof (transformeddata));\n\n        //data.Data.forEach(key => {\n        // const combined = [...CryptoTime,serialDateToNiceDate(key.time)];\n        //setCryptoTime(combined);\n        //console.log(serialDateToNiceDate(key.time));\n        //console.log(combined);\n        //setCryptoVol(key.volume);\n        //console.log(key.volume);\n        //});;\n\n        //const [value, setValue] = useState([])\n        //setValue([...value, newvalue])\n\n        //setCryptoData(cryptoTemp);\n        //setCrypto(true);\n\n        //console.log(CryptoData);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Crypto Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: obtainData,\n      children: \"Obtain Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(CryptoList, {\n        cryptos: livedata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bIyxE3m2Cw+C2MqoqIY7Xg8n+uw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","axios","CryptoList","jsxDEV","_jsxDEV","App","_s","console","log","livedata","time","volume","crypto","setCrypto","CryptoVol","setCryptoVol","CryptoTime","setCryptoTime","CryptoData","setCryptoData","cryptoTemp","cryptoVolume","cryptoData","serialDateToNiceDate","date","toString","Date","Math","round","toUTCString","obtainData","response","Promise","resolve","reject","get","ex","Fragment","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","cryptos","_c","$RefreshReg$"],"sources":["C:/Users/billy/React/crypto-prices/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport CryptoList from './components/CryptoList';\n\n\nfunction App() {\n\nconsole.log(\"App Starting\")\n\nconst livedata = [{time: 1694329200, volume: 773213.97}];\n\nconst [crypto, setCrypto] = useState(false);\nconst [CryptoVol, setCryptoVol] = useState([]);\nconst [CryptoTime, setCryptoTime] = useState([]);\nconst [CryptoData, setCryptoData] = useState([]);\n\nlet cryptoTemp = [];\nlet cryptoVolume = [];\nlet cryptoData = [];\n\nfunction serialDateToNiceDate(date) {\n  date = (date/3600/24).toString();\n  return new Date(Math.round((date)*86400*1000)).toUTCString();\n}\n\n//function myFunction(item) {\n//  console.log(\"My Function running\")\n//  console.log(item);\n//  const [time, volume] = item;\n//  console.log(time);\n//}\n\n//function processData(item, index){\n  //console.log(\"Process running\")\n  //cryptoTemp = [];\n  //item.map((item, index) => (\n  //  console.log(\"Index Array :-\" + index + item.time + item.volume)\n  //  ))\n  \n  //cryptoTemp.push(serialDateToNiceDate(item.time));\n  //cryptoTemp.push(item.volume);\n  //cryptoVolume.push(item.volume);\n  // console.log(\"Temp Array :-\" + cryptoTemp);\n  //cryptoData.push(cryptoTemp);\n  //console.log(\"Data Array :-\" + cryptoData);\n//}\n\nfunction obtainData (){\n  let response = null;\n  new Promise(async (resolve, reject) => {\n    try {\n     response = await axios.get(\"https://min-api.cryptocompare.com/data/exchange/histohour?tsym=BCH&limit=30&api_key=518c2b6d6f2d6282006b26e532bfc1e2b9f5d5184731e3ef885a785d473d6fde\");\n    } catch(ex) {\n      response = null;\n    // error\n      console.log(ex);\n      reject(ex);\n    }\n    if (response) {\n    // success\n      console.log(\"Sucess\");\n      //setCryptoData(livedata);\n      //cryptoTemp = [];\n      //const data = response.data;\n      //console.log(typeof (data.Data));\n      //console.log(data.Data);\n\n      //const transformeddata = data.Data.map((cryptoData) => {\n      //  return {\n      //    time: cryptoData.time\n      //  };\n      //})\n\n    //  setCryptoData(transformeddata);\n      //console.log(typeof (transformeddata));\n      \n      //data.Data.forEach(key => {\n       // const combined = [...CryptoTime,serialDateToNiceDate(key.time)];\n      //setCryptoTime(combined);\n      //console.log(serialDateToNiceDate(key.time));\n      //console.log(combined);\n      //setCryptoVol(key.volume);\n      //console.log(key.volume);\n      //});;\n      \n      //const [value, setValue] = useState([])\n      //setValue([...value, newvalue])\n\n\n      //setCryptoData(cryptoTemp);\n      //setCrypto(true);\n\n      //console.log(CryptoData);\n    \n    }\n    }\n  )\n  \n  } \n  \n  return (\n    <React.Fragment>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Crypto Prices\n        </p>\n      </header>\n      <button onClick={obtainData}>Obtain Data</button>\n      <section>\n        <CryptoList cryptos={livedata} />\n      </section>\n      </React.Fragment>\n  );\n}\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}