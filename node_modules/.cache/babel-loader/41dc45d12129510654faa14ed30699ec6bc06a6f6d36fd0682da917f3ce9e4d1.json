{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\billy\\\\React\\\\crypto-prices\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { button, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log(\"App Starting\");\n  const [crypto, setCrypto] = useState(false);\n  const [CryptoVol, setCryptoVol] = useState();\n  const [CryptoTime, setCryptoTime] = useState();\n  const [CryptoData, setCryptoData] = useState([]);\n  let cryptoTemp = [];\n  let cryptoVolume = [];\n  let cryptoData = [];\n  function serialDateToNiceDate(date) {\n    date = (date / 3600 / 24).toString();\n    return new Date(Math.round(date * 86400 * 1000)).toUTCString();\n  }\n\n  //function myFunction(item, index) {\n  function myFunction(item) {\n    console.log(item);\n    item.Data.forEach(processData);\n  }\n  function processData(item, index) {\n    cryptoTemp = [];\n    //item.map((item, index) => (\n    //  console.log(\"Index Array :-\" + index + item.time + item.volume)\n    //  ))\n\n    cryptoTemp.push(serialDateToNiceDate(item.time));\n    cryptoTemp.push(item.volume);\n    cryptoVolume.push(item.volume);\n    // console.log(\"Temp Array :-\" + cryptoTemp);\n    cryptoData.push(cryptoTemp);\n    console.log(\"Data Array :-\" + cryptoData);\n  }\n  function obtainData() {\n    let response = null;\n    new Promise(async (resolve, reject) => {\n      try {\n        response = await axios.get(\"https://min-api.cryptocompare.com/data/exchange/histohour?tsym=BCH&limit=30&api_key=518c2b6d6f2d6282006b26e532bfc1e2b9f5d5184731e3ef885a785d473d6fde\");\n      } catch (ex) {\n        response = null;\n        // error\n        console.log(ex);\n        reject(ex);\n      }\n      if (response) {\n        // success\n        console.log(\"Sucess\");\n        const data = response.data;\n        console.log(data);\n        setCryptoData(data);\n        setCrypto(true);\n\n        //data.Data.forEach(myFunction);\n        //  resolve(data);\n        // CryptoData.map((item, index) => (\n        // console.log(\"Index Array :-\" + index + item[0] + item[1])\n        //))\n      }\n    });\n\n    //myFunction(response.data)\n    //setCryptoData(cryptoData)\n    //console.log(CryptoData);\n    //const average = cryptoVolume.reduce((a, b) => a + b, 0) / cryptoVolume.length;\n    //console.log(\"Average :- \" + average);\n    //setCryptoVol(average);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Crypto Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: obtainData,\n      children: \"Obtain Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), crypto && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZFFRFu4LMfDo3/v2MXQ/7XbNYU0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","axios","button","useState","jsxDEV","_jsxDEV","App","_s","console","log","crypto","setCrypto","CryptoVol","setCryptoVol","CryptoTime","setCryptoTime","CryptoData","setCryptoData","cryptoTemp","cryptoVolume","cryptoData","serialDateToNiceDate","date","toString","Date","Math","round","toUTCString","myFunction","item","Data","forEach","processData","index","push","time","volume","obtainData","response","Promise","resolve","reject","get","ex","data","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/billy/React/crypto-prices/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { button, useState } from 'react';\n\nfunction App() {\n\n  console.log(\"App Starting\")\n  \n  const [crypto, setCrypto] = useState(false);\nconst [CryptoVol, setCryptoVol] = useState();\nconst [CryptoTime, setCryptoTime] = useState();\nconst [CryptoData, setCryptoData] = useState([]);\n\nlet cryptoTemp = [];\nlet cryptoVolume = [];\nlet cryptoData = [];\n\nfunction serialDateToNiceDate(date) {\n  date = (date/3600/24).toString();\n  return new Date(Math.round((date)*86400*1000)).toUTCString();\n}\n\n//function myFunction(item, index) {\nfunction myFunction(item) {\n  console.log(item);\n  item.Data.forEach(processData);\n}\n\nfunction processData(item, index){\n  cryptoTemp = [];\n  //item.map((item, index) => (\n  //  console.log(\"Index Array :-\" + index + item.time + item.volume)\n  //  ))\n  \n  cryptoTemp.push(serialDateToNiceDate(item.time));\n  cryptoTemp.push(item.volume);\n  cryptoVolume.push(item.volume);\n  // console.log(\"Temp Array :-\" + cryptoTemp);\n  cryptoData.push(cryptoTemp);\n  console.log(\"Data Array :-\" + cryptoData);\n}\n\nfunction obtainData (){\n  let response = null;\n  new Promise(async (resolve, reject) => {\n    try {\n     response = await axios.get(\"https://min-api.cryptocompare.com/data/exchange/histohour?tsym=BCH&limit=30&api_key=518c2b6d6f2d6282006b26e532bfc1e2b9f5d5184731e3ef885a785d473d6fde\");\n    } catch(ex) {\n      response = null;\n    // error\n      console.log(ex);\n      reject(ex);\n    }\n    if (response) {\n    // success\n      console.log(\"Sucess\");\n      const data = response.data;\n      console.log(data);\n      setCryptoData(data);\n      setCrypto(true);\n    \n    //data.Data.forEach(myFunction);\n    //  resolve(data);\n   // CryptoData.map((item, index) => (\n     // console.log(\"Index Array :-\" + index + item[0] + item[1])\n      //))\n    }\n    }\n  )\n  \n  //myFunction(response.data)\n  //setCryptoData(cryptoData)\n  //console.log(CryptoData);\n  //const average = cryptoVolume.reduce((a, b) => a + b, 0) / cryptoVolume.length;\n  //console.log(\"Average :- \" + average);\n  //setCryptoVol(average);\n  } \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Crypto Prices\n        </p>\n      </header>\n      <button onClick={obtainData}>Obtain Data</button>\n        {crypto &&\n        <h2>Data</h2>}\n    </div>\n  );\n}\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}